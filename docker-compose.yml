version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PHPFPM_IMAGE: ${PHPFPM_IMAGE}
        USER_ID: ${USER_ID}
    image: m2dd/php
    container_name: ${APP_NAME}
    restart: ${RESTART_CONDITION}
    tty: true
    working_dir: /var/www
    volumes:
      - ${WORKING_DIR}:/var/www
      - ./m2dd/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./m2dd/auth.json:/home/www/.composer/auth.json
    networks:
      - app-network

  #Cron Service
  cron:
    depends_on:
      - app
    image: m2dd/php
    container_name: ${APP_NAME}_cron
    restart: ${RESTART_CONDITION}
    tty: true
    working_dir: /var/www
    volumes:
      - ${WORKING_DIR}:/var/www
      - ./m2dd/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./m2dd/auth.json:/home/www/.composer/auth.json
      - ./m2dd/crontabs:/home/www/crontabs
    entrypoint: bash -c "sudo crontab /home/www/crontabs/root && crontab /home/www/crontabs/www && sudo cron -f"
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:1.19
    container_name: "${APP_NAME}_webserver"
    restart: ${RESTART_CONDITION}
    tty: true
    ports:
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:443
    volumes:
      - ${WORKING_DIR}:/var/www
      - ./m2dd/conf.d/:/etc/nginx/conf.d/
      - ./m2dd/ssl/:/etc/ssl/
    networks:
      - app-network

  #MySQL Service
  db:
    image: ${MYSQL_IMAGE}
    container_name: "${APP_NAME}_db"
    restart: ${RESTART_CONDITION}
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./m2dd/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #PHPMyAdmin Service
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: "${APP_NAME}_phpmyadmin"
    restart: ${RESTART_CONDITION}
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./m2dd/local.ini:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
